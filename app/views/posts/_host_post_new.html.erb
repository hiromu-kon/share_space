<h4>タイトル</h4>
<%= form_with model: @post do |f| %>
  <%= f.text_field :title, placeholder:"タイトルを入力してください(60文字以内)", class:"post_form_title", id:"text1", onkeyup:"StringCount('text1', 'textcount1')" %>
  <p id="textcount1">0文字</p>
  <h4 class="heading_title">本文</h4>
  <%= f.text_area :content, placeholder:"本文を入力してください", class:"post_form_text", id:"text2", onkeyup:"StringCount('text2', 'textcount2')" %>
  <p id="textcount2">0文字</p>
  <div class="post_date_field">
    <h4 class="heading_title">募集期間(開始日)</h4>
    <h4 class="heading_title">募集期間(終了日)</h4>
  </div>
  <div class="post_date_field">
    <%= f.date_field :start_date, placeholder:"", class:"post_form_title number_input empty_right" %>

    <%= f.date_field :finish_date, placeholder:"", class:"post_form_title number_input" %>
  </div>
  <h4 class="heading_title">報酬</h4>
  <%= f.number_field :reward, placeholder:"数字で入力してください", class:"post_form_title number_input" %>
  <h4 class="heading_title">募集人数</h4>
  <%= f.number_field :recruit_people, placeholder:"数字で入力してください", class:"post_form_title number_input" %>
  <h4 class="heading_title">オフィス住所</h4>
  <input type="text" id="address" class="post_form_title map_form" placeholder="地名、施設名などを入力するか、地図をクリックしてマーカーを立ててください">
  <a class="map_search_btn" onclick="codeAddress()">地図検索</a>
  <a id="del" class="map_delete_btn" onclick="deleteMarker()">
    <i class="fas fa-map-marker-alt fas-2x" style="color:red"></i>削除
  </a>
  <div id='map' class="margin-t-b-14"></div>
  <%= f.fields_for :map, @post.build_map do |map| %>
    <%= map.hidden_field :address %>
    <%= map.hidden_field :latitude %>
    <%= map.hidden_field :longitude %>
  <% end %>
  <h4 class="heading_title">タグ　※コンマ区切りで記入してください</h4>
  <%= f.text_field :tag_ids, class: "post_form_title tag_field number_input", value: @tag_list,\
      placeholder: "例)　エンジニア,コールセンター,営業" %>
  <h4 class="heading_title">オフィス画像</h4>
  <div class="file">
    ファイルを選択
    <%= f.file_field :image, onChange: "imgPreView(event, 'preview1')", class:"file_input" %>
  </div>
  <div>
    <div id="preview1" class="post_img"><%= image_tag @post.image, id:"previewImage-preview1" if @post.image.attached? %></div>
  </div>

  <%= f.submit '投稿', class:"form_control btn_primary" %>
<% end %>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_API'] %>&callback=initMap" async defer></script>
<script>
var marker
var myLatLng
var map_lat
var map_lng
var address
var geocoder
var map_result
let map
function initMap (){
  myLatLng = {lat: 35.68090045006303, lng: 139.76690798417752}
  map_lat = document.getElementById('post_map_latitude')
  map_lng = document.getElementById('post_map_longitude')
  address = document.getElementById('post_map_address')
  marker = new google.maps.Marker();

  map = new google.maps.Map(document.getElementById('map'), {
  center: myLatLng,
  zoom: 12
  });

google.maps.event.addListener(map, 'click', mylistener);

     //クリックしたときの処理
function mylistener(event){
    marker.setPosition(new google.maps.LatLng(event.latLng.lat(), event.latLng.lng()));
    marker.setMap(map);
    console.log(event.latLng.lat(), event.latLng.lng());
    var lat = event.latLng.lat();
    var lng = event.latLng.lng();
    map_lat.value = lat
    map_lng.value = lng
    var lat_and_lng = { lat,lng }
    reverse(lat_and_lng);
  }

}
function deleteMarker(){
    marker.setMap(null);
    map_lat.value = "";
    map_lng.value = "";
}
function reverse(lat_lng) {
var geo = new google.maps.Geocoder();
geo.geocode(
  {
    'latLng': lat_lng
  },
  function(results, status){
    if (status=='OK') {
      address.value = results[0].formatted_address
    	console.log(results[0].formatted_address)
    }
  }
);
}
function codeAddress(){
  geocoder = new google.maps.Geocoder()
  let inputAddress = document.getElementById('address').value;
  geocoder.geocode( {
    'address': inputAddress,
     'region': 'jp'
    }, function(results, status) {
    if (status == 'OK') {
      map.setCenter(results[0].geometry.location);
      map_result = results[0].geometry.location;
      map_lat.value = map_result.lat();
      map_lng.value = map_result.lng();
      marker.setPosition(new google.maps.LatLng(map_result.lat(), map_result.lng()));
      marker.setMap(map);
      console.log(map_lat.value,map_lng.value);
      reverse(map_result);
    } else {
      alert('該当する結果がありませんでした');
      initMap();
    }
  });
}
</script>
